version: 0.2

env:
  #variables:
     # key: "value"
     # key: "value"
  #parameter-store:
     # key: "value"
     # key: "value"
  #secrets-manager:
     # key: secret-id:json-key:version-stage:version-id
     # key: secret-id:json-key:version-stage:version-id
  #exported-variables:
     # - variable
     # - variable
  git-credential-helper: yes

phases:
  install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    #runtime-versions:
    #   name: 3.0
      # name: version
    commands:
       - echo install OPA
       - curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
       - chmod 755 ./opa
       - |
        cat >verify.sh <<EOF
        #!/usr/bin/env bash
        ./opa eval --fail-defined --format pretty -i test-stack.json -d rule.rego  "data" >> result.txt
        if grep -q "true" result.txt
        then
        cat result.txt
        exit 1
        fi
       - chmod 755 ./verify.sh
       #- git clone https://git-codecommit.ap-southeast-1.amazonaws.com/v1/repos/cfn-guard-rules  
  #pre_build:
    #commands:
      # - command
      # - command
  build:
    commands:
       - ./verify.sh
      #- ./opa eval --fail-defined --format pretty -i test-stack.json -d rule.rego  "data"
  #post_build:
    #commands:
      # - command
      # - command
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
#artifacts:
  #files:
  #   - location . 
    # - location
  #name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - paths